using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using static UnityEditor.Progress;

static public class F
{
    
  //public static void Sort(this Transform a )
  //  {
  //      if(a.childCount == 0)
  //      {
  //          Debug.Log("没有子对象");
  //      }
  //      else
  //      {
           
  //          List<int> ints = new List<int>();
  //          Dictionary<int, int> list = new Dictionary<int, int>();
  //          for (int i = 0; i < a.childCount; i++)
  //          {
  //              //Debug.Log(a.GetChild(i).name);
  //              list.Add(a.GetChild(i).name.Length,i);
  //          }
  //          foreach(int item in list.Keys)
  //          {
  //              ints.Add(item);
  //              //Debug.Log("以上名字长度为" + item+" 他此时的索引为"+list[item]);
  //          }
  //          ints.Sort();
  //          //for (int i = 0; i < ints.Count; i++)
  //          //{
  //          //    Debug.Log("当前值为" + ints[i] + "他的索引为" + i);
  //          //}
  //          for (int i = 0; i < ints.Count; i++)
  //          {
  //              Debug.Log("当前数组有" + ints.Count + "个数");
  //              Debug.Log("当前的值为"+ a.GetChild(list[ints[i]]).name + "当前值的名字长度为" + ints[i] + "他的原本索引为" + list[ints[i]] + "我们将其设置为的索引是" + i);
  //              a.GetChild(list[ints[i]]).SetSiblingIndex(i);
  //          }

  //      }
  //  }
}
